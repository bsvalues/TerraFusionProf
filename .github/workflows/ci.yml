name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  smoke-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: terrafusion_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Start core services
      run: |
        npm run start:api-gateway &
        npm run start:user-service &
        npm run start:property-service &
        npm run start:form-service &
        npm run start:report-service &
        npm run start:analysis-service &
        npm run start:apollo-gateway &
        sleep 10 # give services time to start
    
    - name: Run smoke tests
      run: bash smoke-test.sh

  matrix-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        app: [
          'web-client', 
          'api-gateway', 
          'user-service', 
          'property-service', 
          'form-service', 
          'analysis-service', 
          'report-service', 
          'apollo-gateway'
        ]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint:${{ matrix.app }}
    
    - name: Test
      run: npm run test:${{ matrix.app }}
    
    - name: Build
      run: npm run build:${{ matrix.app }}

  deploy:
    needs: [smoke-tests, matrix-build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build all packages
      run: npm run build
    
    - name: Deploy to staging
      run: npm run deploy:staging
      env:
        DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}