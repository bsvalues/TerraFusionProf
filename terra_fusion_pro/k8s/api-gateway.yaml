apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  labels:
    app: api-gateway
    part-of: terrafusionpro
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: ${DOCKER_REGISTRY}/terrafusionpro/api-gateway:${VERSION}
        imagePullPolicy: Always
        ports:
        - containerPort: 5002
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: PORT
          value: "5002"
        - name: HOST
          value: "0.0.0.0"
        - name: USER_SERVICE_URL
          value: "http://user-service:5004"
        - name: PROPERTY_SERVICE_URL
          value: "http://property-service:5003"
        - name: FORM_SERVICE_URL
          value: "http://form-service:5005"
        - name: REPORT_SERVICE_URL
          value: "http://report-service:5007"
        - name: ANALYSIS_SERVICE_URL
          value: "http://analysis-service:5006"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: terrafusionpro-jwt
              key: secret
        - name: RATE_LIMIT_REQUESTS
          value: "100"
        - name: RATE_LIMIT_WINDOW_MS
          value: "60000"
        livenessProbe:
          httpGet:
            path: /health
            port: 5002
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 5002
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  labels:
    app: api-gateway
    part-of: terrafusionpro
spec:
  selector:
    app: api-gateway
  ports:
  - port: 80
    targetPort: 5002
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.terrafusionpro.com
    secretName: terrafusionpro-api-tls
  rules:
  - host: api.terrafusionpro.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80