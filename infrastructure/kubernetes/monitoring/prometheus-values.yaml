## Prometheus Helm chart values for TerraFusionPro

# Server configuration
server:
  retention: 15d
  persistentVolume:
    enabled: true
    size: 50Gi
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

# Alertmanager configuration
alertmanager:
  enabled: true
  persistentVolume:
    enabled: true
    size: 10Gi
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname', 'job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack'
      routes:
      - match:
          severity: critical
        receiver: 'pagerduty'
    receivers:
    - name: 'slack'
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#terrafusionpro-alerts'
        send_resolved: true
        title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] TerraFusionPro Monitoring Alert'
        text: >-
          {{ range .Alerts }}
            *Alert:* {{ .Labels.alertname }}
            *Description:* {{ .Annotations.description }}
            *Severity:* {{ .Labels.severity }}
            *Details:*
            {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
            {{ end }}
          {{ end }}
    - name: 'pagerduty'
      pagerduty_configs:
      - service_key: '${PAGERDUTY_SERVICE_KEY}'
        send_resolved: true

# Node exporter configuration
nodeExporter:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

# Kube state metrics configuration
kubeStateMetrics:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

# Service monitors for TerraFusionPro services
additionalServiceMonitors:
  - name: terrafusionpro-services
    selector:
      matchLabels:
        part-of: terrafusionpro
    namespaceSelector:
      matchNames:
        - terrafusionpro
        - terrafusionpro-dev
        - terrafusionpro-staging
    endpoints:
      - port: metrics
        interval: 15s
        path: /metrics

  # PostgreSQL Exporter
  - name: postgres-exporter
    selector:
      matchLabels:
        app: postgres-exporter
    namespaceSelector:
      matchNames:
        - terrafusionpro
        - terrafusionpro-dev
        - terrafusionpro-staging
    endpoints:
      - port: metrics
        interval: 30s

# Custom rules for TerraFusionPro services
additionalPrometheusRules:
  - name: terrafusionpro-rules
    groups:
      - name: terrafusionpro-services
        rules:
          - alert: ServiceDown
            expr: up{job=~"terrafusionpro-.*"} == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Service {{ $labels.job }} is down"
              description: "{{ $labels.job }} service has been down for more than 1 minute."
              
          - alert: HighResponseTime
            expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job=~"terrafusionpro-.*"}[5m])) by (le, job, handler)) > 2
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High response time on {{ $labels.job }} - {{ $labels.handler }}"
              description: "95th percentile of response time on {{ $labels.job }} - {{ $labels.handler }} is above 2 seconds for the last 5 minutes."
              
          - alert: HighErrorRate
            expr: sum(rate(http_requests_total{job=~"terrafusionpro-.*", status=~"5.."}[5m])) by (job) / sum(rate(http_requests_total{job=~"terrafusionpro-.*"}[5m])) by (job) > 0.05
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High error rate on {{ $labels.job }}"
              description: "Error rate on {{ $labels.job }} is above 5% for the last 5 minutes."
              
      - name: terrafusionpro-database
        rules:
          - alert: PostgreSQLHighCPU
            expr: rate(process_cpu_seconds_total{job="postgres-exporter"}[5m]) * 100 > 80
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "PostgreSQL high CPU usage"
              description: "PostgreSQL CPU usage is above 80% for the last 5 minutes."
              
          - alert: PostgreSQLHighConnections
            expr: pg_stat_activity_count{job="postgres-exporter"} > 150
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "PostgreSQL high connection count"
              description: "PostgreSQL has more than 150 active connections for the last 5 minutes."
              
          - alert: PostgreSQLReplicationLag
            expr: pg_stat_replication_lag_bytes{job="postgres-exporter"} > 100000000
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "PostgreSQL replication lag"
              description: "PostgreSQL replication lag is higher than 100MB for the last 5 minutes."